<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>
    2020-03 on 
    Mity
    </title>
    <link>https://mithy.fun/archives/2020-03/</link>
    <description>Recent content in 2020-03
    on Mity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    
    
    <copyright>&amp;copy;Mamoru Machida 2019</copyright>
    <lastBuildDate>Mon, 09 Mar 2020 15:54:48 +0900</lastBuildDate>
    
    
        <atom:link href="https://mithy.fun/archives/2020-03/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Auraコンポーネントから特定フィールドのPickListValuesを取得する</title>
      <link>https://mithy.fun/memos/aura%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%8B%E3%82%89%E7%89%B9%E5%AE%9A%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AEpicklistvalues%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 09 Mar 2020 15:54:48 +0900</pubDate>
      
      <guid>https://mithy.fun/memos/aura%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%8B%E3%82%89%E7%89%B9%E5%AE%9A%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%83%89%E3%81%AEpicklistvalues%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B/</guid>
      <description>やりたいこと AuraコンポーネントからオブジェクトのPickListフィールドのPickListValuesを取得したい。具体的には取引先(個人)の敬称フィールドの選択肢を取得したい。 取得する Account.Salutation.getDescribe().getPicklistValues()でできる。 汎用的にするには SObject sObj = (SObject)Type.forName(sObjectName).newInstance(); Schema.DescribeSObjectResult describeSObj = sObj.getSObjectType().getDescribe(); Schema.SObjectField field = describeSObj.fields.getMap().get(fieldName); field.getDescribe().getPicklistValues(); という感じになる。Schema.DescribeSO</description>
      <content:encoded>

<h2 id="やりたいこと">やりたいこと</h2>

<p>AuraコンポーネントからオブジェクトのPickListフィールドのPickListValuesを取得したい。具体的には取引先(個人)の敬称フィールドの選択肢を取得したい。</p>

<h2 id="取得する">取得する</h2>

<p><code>Account.Salutation.getDescribe().getPicklistValues()</code>でできる。</p>

<p>汎用的にするには</p>
<div class="highlight"><pre class="chroma"><code class="language-apex" data-lang="apex">SObject sObj = (SObject)Type.forName(sObjectName).newInstance();
Schema.DescribeSObjectResult describeSObj = sObj.getSObjectType().getDescribe();
Schema.SObjectField field = describeSObj.fields.getMap().get(fieldName);
field.getDescribe().getPicklistValues();</code></pre></div>
<p>という感じになる。<code>Schema.DescribeSObjectResult</code>の<code>fields.getMap().get(fieldName)</code>で<code>SObjectField</code>を取得するところが味噌っぽい</p>

<h2 id="参考">参考</h2>

<p><a href="https://developer.salesforce.com/docs/atlas.ja-jp.apexcode.meta/apexcode/apex_methods_system_sobject_describe.htm">DescribeSObjectResult クラス | Apex 開発者ガイド | Salesforce Developers</a></p>
</content:encoded>
    </item>
    
    <item>
      <title>Aura コンポーネントのため Lightning データサービスの基本</title>
      <link>https://mithy.fun/memos/aura-%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%81%9F%E3%82%81-lightning-%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E5%9F%BA%E6%9C%AC/</link>
      <pubDate>Wed, 04 Mar 2020 17:47:57 +0900</pubDate>
      
      <guid>https://mithy.fun/memos/aura-%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E3%81%9F%E3%82%81-lightning-%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E5%9F%BA%E6%9C%AC/</guid>
      <description>やる前 force:recordDataを使うと楽にデータを取得、操作できるということでやってみる。 メモ &amp;lt;aura:component implements=&amp;quot;flexipage:availableForRecordHome, force:hasRecordId&amp;quot;&amp;gt;のように、implementsがないとLightningAppBuilderでレコードページへ追加する際に表示されない、ハマった。また、force:hasRecordIdはv.recordIdにアクセスできることを明示できる。force:h</description>
      <content:encoded>

<h2 id="やる前">やる前</h2>

<p><code>force:recordData</code>を使うと楽にデータを取得、操作できるということでやってみる。</p>

<h2 id="メモ">メモ</h2>

<p><code>&lt;aura:component implements=&quot;flexipage:availableForRecordHome, force:hasRecordId&quot;&gt;</code>のように、implementsがないとLightningAppBuilderでレコードページへ追加する際に表示されない、ハマった。また、<code>force:hasRecordId</code>は<code>v.recordId</code>にアクセスできることを明示できる。<a href="https://developer.salesforce.com/docs/component-library/bundle/force:hasRecordId/documentation">force:hasRecordId - documentation - Salesforce Lightning Component Library</a><br />
レコードの保存はこんな感じの関数をボタンのクリック等に紐付けておこなう。<code>recordLoader</code>は<code>force:recordData</code>の<code>aura:id</code>。</p>
<div class="highlight"><pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="p">({</span>
    <span class="nx">save</span> <span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">cmp</span><span class="p">,</span> <span class="nx">event</span><span class="p">,</span> <span class="nx">helper</span><span class="p">)</span> <span class="p">{</span>
        <span class="kd">var</span> <span class="nx">recordLoader</span> <span class="o">=</span> <span class="nx">cmp</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&#34;recordLoader&#34;</span><span class="p">);</span>
        <span class="nx">recordLoader</span><span class="p">.</span><span class="nx">saveRecord</span><span class="p">(</span><span class="nx">$A</span><span class="p">.</span><span class="nx">getCallback</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">saveResult</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="nx">saveResult</span><span class="p">.</span><span class="nx">state</span> <span class="o">===</span> <span class="s2">&#34;ERROR&#34;</span><span class="p">)</span> <span class="p">{</span>
                <span class="p">...</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="p">...</span>
            <span class="p">}</span>
        <span class="p">}));</span>
    <span class="p">}</span>
<span class="p">})</span>
</code></pre></div></content:encoded>
    </item>
    
  </channel>
</rss>
